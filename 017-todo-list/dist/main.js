(()=>{"use strict";class t{constructor(t){this.name=t,this.todos=[]}getName=()=>this.name;setName=t=>this.name=t;getTodos=()=>this.todos;setTodos=t=>this.todos=t;getTodo=t=>this.todos.find((e=>e.getTitle()===t));addTodo=t=>this.todos.push(t);deleteTodo=t=>{this.todos.splice(this.todos.indexOf(t),1)}}class e{constructor(t,e="",o="No due date",s=null,d=!1){this.title=t,this.description=e,this.dueDate=o,this.priority=s,this.isDone=d}getTitle=()=>this.title;setTitle=t=>this.title=t;getDescription=()=>this.description;setDescription=t=>this.description=t;getDueDate=()=>this.dueDate;setDueDate=t=>this.dueDate=t;setPriority=t=>this.priority=t;getPriority=()=>this.priority;setIsDone=t=>this.isDone=t;getIsDone=()=>this.isDone}class o{constructor(){const o=new t("My Todos"),s=new e("take out the garbage","longer description of a todo","2021-05-29","high",!1),d=new e("work on projects","desc2","No due date","low",!0);o.setTodos([s,d]),this.projects=[],this.projects.push(o),this.projects.push(new t("Art Lesson for 5/25")),this.projects.push(new t("Tuesday class"))}getProjects=()=>this.projects;setProjects=t=>this.projects=t;getProject=t=>this.projects.find((e=>e.getName()===t));addProject=t=>this.projects.push(t);deleteProject=t=>{const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}}class s{static saveTodoList(t){localStorage.setItem("todoList",JSON.stringify(t))}static getTodoList(){const s=Object.assign(new o,JSON.parse(localStorage.getItem("todoList")));return s.setProjects(s.getProjects().map((e=>Object.assign(new t,e)))),s.getProjects().forEach((t=>t.setTodos(t.getTodos().map((t=>Object.assign(new e,t)))))),s}static addProject(t){const e=s.getTodoList();e.addProject(t),s.saveTodoList(e)}static deleteProject(t){const e=s.getTodoList();e.deleteProject(t),s.saveTodoList(e)}static toggleTodoIsDone(t,e){const o=s.getTodoList(),d=o.getProject(t).getTodos().filter((t=>t.getTitle()===e))[0];d.setIsDone(!d.getIsDone()),s.saveTodoList(o)}static deleteTodo(t,e){const o=s.getTodoList();o.getProject(t).deleteTodo(e),s.saveTodoList(o)}static saveTodoForm(t,e,o,d,r,c){const i=s.getTodoList(),n=i.getProject(t).getTodo(e);if(!o)return alert("must provide a title");r||(r="No due date"),n.setTitle(o),n.setPriority(d),n.setDueDate(r),n.setDescription(c),s.saveTodoList(i)}static addTodo(t,o,d,r,c){const i=s.getTodoList();i.getProject(t).addTodo(new e(o,c,r,d)),s.saveTodoList(i)}}class d{static currentProject="My Todos";static loadHome=()=>{if(null===localStorage.getItem("todoList")){const t=s.getTodoList();localStorage.setItem("todoList",JSON.stringify(t))}d.initProjectForm(),d.initTodoForm(),d.loadProjects(),d.initProjects(),d.loadTodos(d.currentProject),d.initTodos()};static initProjectForm(){document.querySelector(".btn-project-form").addEventListener("click",d.toggleAddProjectForm),document.querySelector(".btn-cancel").addEventListener("click",d.toggleAddProjectForm),document.querySelector(".btn-add").addEventListener("click",(t=>d.addProject(t)))}static initTodoForm(){document.querySelector(".btn-add-todo").addEventListener("click",d.toggleAddTodoForm),document.querySelector("#new-todo-save-btn").addEventListener("click",(t=>{t.preventDefault(),d.addTodo()}))}static loadProjects(){document.querySelector(".projects").innerHTML="",s.getTodoList().getProjects().forEach((t=>{d.createProject(t.name)}))}static initProjects(){document.querySelectorAll(".btn-delete-project").forEach((t=>t.addEventListener("click",(t=>{const{name:e}=t.target.dataset;s.deleteProject(e),d.reloadProjects()})))),document.querySelectorAll(".project").forEach((t=>{t.addEventListener("click",(e=>{e.target.classList.contains("btn-delete-project")||d.activateProject(t.dataset.name)}))}))}static loadTodos(t){const e=document.querySelector(".current-project-title");document.querySelector(".todos").textContent="",e.textContent=t,s.getTodoList().getProject(t).getTodos().forEach((t=>{d.createTodo(t)}))}static initTodos(){document.querySelectorAll(".checkbox").forEach((t=>{t.addEventListener("click",(t=>{const e=t.target.parentElement.nextElementSibling.children[0].textContent;s.toggleTodoIsDone(d.currentProject,e),d.reloadTodos()}))})),document.querySelectorAll(".delete-todo").forEach((t=>t.addEventListener("click",(t=>{const e=t.target.dataset.name;s.deleteTodo(d.currentProject,e),d.reloadTodos()})))),document.querySelectorAll(".todo-title").forEach((t=>{const e=t.textContent;t.addEventListener("click",(t=>{d.loadTodoDetails(e)}))}))}static toggleAddProjectForm(){const t=document.querySelector(".form-add-project");t.reset(),t.classList.toggle("show")}static toggleAddTodoForm(){const t=document.querySelector(".form-add-todo");t.reset(),t.classList.toggle("show")}static createProject=t=>{document.querySelector(".projects").innerHTML+=`\n      <li class='project ${d.currentProject===t?"active-project":""}' data-name='${t}'>\n        <div>\n          <i class='fas fa-folder${d.currentProject===t?"-open":""}'></i>\n          <span>${t}</span>\n        </div>\n        <div>\n          <i class='far fa-trash-alt btn-delete-project' data-name='${t}'></i>\n        </div>\n      </li>\n          `};static reloadProjects(){d.loadProjects(),d.initProjects()}static reloadTodos(){d.loadTodos(d.currentProject),d.initTodos()}static addProject(e){e.preventDefault();const o=document.querySelector("#project-name"),r=o.value;o.value="",d.toggleAddProjectForm(),s.getTodoList().getProject(r)?alert("Project with that name already exists"):(s.addProject(new t(r)),d.activateProject(r))}static addTodo(){const t=document.querySelector("#new-todo-title").value,e=document.querySelector("#new-todo-priority").value;let o=document.querySelector("#new-todo-due-date").value;const r=document.querySelector("#new-todo-description").value;o||(o="No due date"),s.addTodo(d.currentProject,t,e,o,r),d.toggleAddTodoForm(),d.reloadTodos()}static activateProject(t){d.currentProject=t,d.reloadProjects(),d.reloadTodos(),d.hideTodoDetails()}static createTodo(t){document.querySelector(".todos").innerHTML+=`\n    <tr class="todo" style='border-left: 5px solid ${"high"===t.priority?"red":"med"===t.priority?"yellow":"green"}'>\n      <td>\n        <i class='far fa-${t.isDone?"check-circle":"circle"} checkbox'></i>\n      </td>\n      <td>\n      <span class='todo-title' ${t.isDone?'style="text-decoration: line-through; font-style: italic"':""}>${t.title}</span>\n      </td>\n      <td>\n        <span class='todo-dueDate'>${t.dueDate}</span>\n      </td>\n      <td>\n        <i class='fas fa-trash-alt delete-todo' data-name='${t.title}'></i>\n      </td>\n    </tr>\n    `}static loadTodoDetails(t){const e=s.getTodoList().getProject(d.currentProject).getTodo(t),o=document.querySelector(".todo-details-form");o.innerHTML="",o.innerHTML=`\n      <label for="todo-title">Title</label>\n      <input id="todo-title" name="todo-title" type="text" value="${e.getTitle()}" />\n      <label for="todo-priority">Priority</label>\n      <select id="todo-priority" name="todo-priority">\n        <option value="low" ${"low"===e.getPriority()?"selected":""}>Low</option>\n        <option value="med" ${"med"===e.getPriority()?"selected":""}>Medium</option>\n        <option value="high" ${"high"===e.getPriority()?"selected":""}>High</option>\n      </select>\n      <label for="todo-due-date">Due Date</label>\n      <input id="todo-due-date" name="todo-due-date" type="date" value="${"No due date"!==e.getDueDate()?e.getDueDate():""}"></input>\n      <label for="todo-description">Description</label>\n      <textarea id="todo-description" name="todo-description">${e.getDescription()}</textarea>\n      <button id="todo-save-btn">Save</button>\n    `;const r=document.querySelector("#todo-save-btn");o.style.display="flex",r.addEventListener("click",(t=>{t.preventDefault(),d.saveTodoForm(e.getTitle()),d.reloadTodos()}))}static saveTodoForm(t){const e=document.querySelector("#todo-title").value,o=document.querySelector("#todo-priority").value;let r=document.querySelector("#todo-due-date").value;const c=document.querySelector("#todo-description").value;s.saveTodoForm(d.currentProject,t,e,o,r,c),d.hideTodoDetails()}static hideTodoDetails(){document.querySelector(".todo-details-form").style.display="none"}}document.body.addEventListener("DOMContentLoaded",d.loadHome())})();