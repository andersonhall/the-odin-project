(()=>{"use strict";class t{constructor(t){this.name=t,this.todos=[]}getName=()=>this.name;setName=t=>this.name=t;getTodos=()=>this.todos;setTodos=t=>this.todos=t;addTodo=t=>this.todos.push(t);deleteTodo=t=>{const e=this.todos.find((t=>t.getName()===t));this.todos.splice(this.todos.indexOf(e),1)}}class e{constructor(t,e="",o="No due date",s=null,c=!1){this.title=t,this.description=e,this.dueDate=o,this.priority=s,this.isDone=c}getTitle=()=>this.title;setTitle=t=>this.title=t;getDescription=()=>this.description;setDescription=t=>this.description=t;getDueDate=()=>this.dueDate;setDueDate=t=>this.dueDate=t;setPriority=t=>this.priority=t;getPriority=()=>this.priority;setIsDone=t=>this.isDone=t;getIsDone=()=>this.isDone}class o{constructor(){const o=new t("My Todos"),s=new e("take out the garbage","longer description of a todo","2021-05-29","high",!1),c=new e("work on projects","desc2","No due date","low",!0);o.setTodos([s,c]),this.projects=[],this.projects.push(o),this.projects.push(new t("Art Lesson for 5/25")),this.projects.push(new t("Tuesday class"))}getProjects=()=>this.projects;setProjects=t=>this.projects=t;getProject=t=>this.projects.find((e=>e.getName()===t));addProject=t=>this.projects.push(t);deleteProject=t=>{const e=this.projects.find((e=>e.getName()===t));this.projects.splice(this.projects.indexOf(e),1)}}class s{static saveTodoList(t){localStorage.setItem("todoList",JSON.stringify(t))}static getTodoList(){const s=Object.assign(new o,JSON.parse(localStorage.getItem("todoList")));return s.setProjects(s.getProjects().map((e=>Object.assign(new t,e)))),s.getProjects().forEach((t=>t.setTodos(t.getTodos().map((t=>Object.assign(new e,t)))))),s}static addProject(t){const e=s.getTodoList();e.addProject(t),s.saveTodoList(e)}static deleteProject(t){const e=s.getTodoList();e.deleteProject(t),s.saveTodoList(e)}}class c{currentProject=null;static loadHome=()=>{c.loadProjects(),c.loadTodos("My Todos")};static loadProjects(){document.querySelector(".projects").textContent="",s.getTodoList().getProjects().forEach((t=>{c.createProject(t.name)})),c.initProjects()}static initProjects(){document.querySelector(".btn-project-form").addEventListener("click",c.toggleAddProjectForm);const e=document.querySelector(".form-add-project .btn-add"),o=document.querySelector(".form-add-project .btn-cancel"),r=document.querySelector("#project-name");e.addEventListener("click",(e=>{const o=r.value;e.preventDefault(),s.addProject(new t(o)),c.createProject(o),c.toggleAddProjectForm()})),o.addEventListener("click",(t=>{t.preventDefault(),c.toggleAddProjectForm()}))}static loadTodos(t){document.querySelector(".current-project-title").textContent=t,(new o).getProject(t).getTodos().forEach((t=>{c.createTodo(t)}))}static toggleAddProjectForm(){document.querySelector(".form-add-project").classList.toggle("show")}static createProject=t=>{document.querySelector(".projects").innerHTML+=`\n      <li class='project'>\n        <div>\n         <i class='fas fa-folder'></i>\n          <span>${t}</span>\n        </div>\n        <div>\n          <i class='far fa-trash-alt btn-delete-project' data-name='${t}'></i>\n          </div>\n          </li>\n          `};static createTodo(t){document.querySelector(".todos").innerHTML+=`\n    <tr class="todo" style='border-left: 5px solid ${"high"===t.priority?"red":"med"===t.priority?"yellow":"green"}'>\n      <td>\n        <i class='far fa-${t.isDone?"check-circle":"circle"}'></i>\n      </td>\n      <td>\n      <span class='todo-title' ${t.isDone?'style="text-decoration: line-through; font-style: italic"':""}>${t.title}</span>\n      </td>\n      <td>\n        <span class='todo-dueDate'>${t.dueDate}</span>\n      </td>\n      <td>\n        <i class='fas fa-trash-alt'></i>\n      </td>\n    </tr>\n    `}}document.body.addEventListener("DOMContentLoaded",c.loadHome())})();